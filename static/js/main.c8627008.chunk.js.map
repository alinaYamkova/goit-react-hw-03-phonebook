{"version":3,"sources":["Components/Phonebook/Phonebook.module.css","Components/Phonebook/Phonebook.js","Components/Contacts/Contacts.js","Components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","addContact","reset","onSubmit","this","className","s","label","id","uuidv4","onChange","type","placeholder","input","btn","Component","ContactList","contacts","deleteContact","map","list","text","btn_del","onClick","Filter","filter","filteredContacts","filter_label","filter_input","App","newContact","find","contact","toLowerCase","alert","prevState","contactId","showFilteredContacts","normalizedFilter","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8627008.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Phonebook_btn__2gmOi\",\"btn_del\":\"Phonebook_btn_del__3HrF0\",\"label\":\"Phonebook_label__1X-My\",\"filter_label\":\"Phonebook_filter_label__Qj3R3\",\"input\":\"Phonebook_input__12Hzx\",\"filter_input\":\"Phonebook_filter_input__S4dkk\",\"title\":\"Phonebook_title__2MDsg\",\"text\":\"Phonebook_text__2uxIE\",\"list\":\"Phonebook_list__37LK_\"};","import { Component } from \"react\";\r\nimport s from \"../Phonebook/Phonebook.module.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.addContact(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label className={s.label}>\r\n            Name\r\n            <input\r\n              id={uuidv4()}\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"name\"\r\n              className={s.input}\r\n            />\r\n          </label>\r\n          <label className={s.label}>\r\n            Number\r\n            <input\r\n              id={uuidv4()}\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n              type=\"number\"\r\n              name=\"number\"\r\n              placeholder=\"number\"\r\n              className={s.input}\r\n            />\r\n          </label>\r\n          <button className={s.btn} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"../Phonebook/Phonebook.module.css\";\r\n// import { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <ol>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.list} key={id}>\r\n          <p className={s.text}>{name}, </p>\r\n          <p className={s.text}>tlf.: {number}</p>\r\n          <button\r\n            type=\"button\"\r\n            className={s.btn_del}\r\n            onClick={() => deleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ol>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport s from \"../Phonebook/Phonebook.module.css\";\r\n\r\nconst Filter = ({ filter, filteredContacts }) => (\r\n  <label className={s.filter_label}>\r\n    To make filter by Name\r\n    <input\r\n      className={s.filter_input}\r\n      type=\"text\"\r\n      value={filter}\r\n      onChange={filteredContacts}\r\n    ></input>\r\n  </label>\r\n);\r\n\r\nexport default Filter;\r\n","import { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactForm from \"./Components/Phonebook/Phonebook\";\nimport ContactList from \"./Components/Contacts/Contacts\";\nimport Filter from \"./Components/Filter/Filter\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  //збереження змiн (додавання/видалення) контактыв у localStorage\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  //добавлення контакту в список(стейт)\n  addContact = ({ name, number }) => {\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    const { contacts } = this.state;\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`${name} is already in contacts!`);\n      return;\n    } else {\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, newContact],\n      }));\n    }\n  };\n\n  //видалення кнопкою з стейта\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  //фыльтрування\n  filteredContacts = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  showFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const {\n      addContact,\n      filteredContacts,\n      showFilteredContacts,\n      deleteContact,\n    } = this;\n\n    return (\n      <div className=\"App\">\n        <h2>Phonebook</h2>\n        <ContactForm addContact={addContact} />\n\n        <h2>Contacts</h2>\n        <Filter\n          filter={this.state.filter}\n          filteredContacts={filteredContacts}\n        />\n        <ContactList\n          contacts={showFilteredContacts()}\n          deleteContact={deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}